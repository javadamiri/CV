@INPROCEEDINGS{7369843, 
author={J. E. {Amiri} and M. {Kargahi}}, 
booktitle={2015 CSI Symposium on Real-Time and Embedded Systems and Technologies (RTEST)}, 
title={A predictable interrupt management policy for real-time operating systems}, 
year={2015}, 
volume={}, 
number={}, 
pages={1-8}, 
keywords={embedded systems;operating systems (computers);predictable interrupt management policy;real-time operating system;embedded system;I/O device;interrupt service routine;interrupt frequency;ISR-task priority inversion;static priority linked list;dynamic priority bitmap;Real-time systems;Embedded systems;Instruction sets;Timing;Kernel;Protocols;Embedded Systems;Interrupt Scheduling;Priority Inheritance Protocol;Real-Time Operating System (RTOS);RTEMS;Threaded Interrupts}, 
doi={10.1109/RTEST.2015.7369843}, 
ISSN={}, 
month={Oct},}

@inproceedings{10.1145/3358504.3361226,
author = {Ebrahimian Amiri, Javad and Blackburn, Stephen M. and Hosking, Antony L. and Norrish, Michael},
title = {Designing a Low-Level Virtual Machine for Implementing Real-Time Managed Languages},
year = {2019},
isbn = {9781450369879},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3358504.3361226},
doi = {10.1145/3358504.3361226},
abstract = {Applications of real-time systems have grown significantly in both diversity and popularity, and the appetite for real-time software has never been higher. In contrast, the choice of programming languages used to develop such systems has stagnated, mostly limited to decades-old languages, specifically Ada and C/C++, and more recently real-time Java. We posit that the high cost and difficulty of developing new programming languages for real-time systems is the main reason for this mono-culture.  To tackle the lack of diversity, we propose the design of a micro virtual machine on which managed programming languages for real-time systems can be developed. Our design facilitates bringing the advantages of correct managed languages to the real-time domain. We build on a previously published micro virtual machine specification, named Mu, and propose a set of modifications to its abstractions over concurrency and memory management to make it suitable for real-time systems.  The resulting design is a basis for a new micro virtual machine specification we call RTMu, designed as a reliable and efficient foundation for the development of managed languages for real-time systems.},
booktitle = {Proceedings of the 11th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages},
pages = {1â€“11},
numpages = {11},
keywords = {managed programming language, micro virtual machine, real-time systems},
location = {Athens, Greece},
series = {VMIL 2019}
}
